// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: index.proto
// Protobuf C++ Version: 5.27.2

#include "manager/proto/index.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace IndexRpc {

inline constexpr IndexSend::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : contentdesc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR IndexSend::IndexSend(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct IndexSendDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IndexSendDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IndexSendDefaultTypeInternal() {}
  union {
    IndexSend _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IndexSendDefaultTypeInternal _IndexSend_default_instance_;

inline constexpr IndexReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : varid_{},
        _varid_cached_byte_size_{0},
        varname_{},
        dirpath_{},
        filepath_{},
        spaceid_{0},
        timeid_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR IndexReply::IndexReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct IndexReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IndexReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IndexReplyDefaultTypeInternal() {}
  union {
    IndexReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IndexReplyDefaultTypeInternal _IndexReply_default_instance_;
}  // namespace IndexRpc
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_index_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_index_2eproto = nullptr;
const ::uint32_t
    TableStruct_index_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::IndexRpc::IndexSend, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::IndexRpc::IndexSend, _impl_.contentdesc_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::IndexRpc::IndexReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::IndexRpc::IndexReply, _impl_.spaceid_),
        PROTOBUF_FIELD_OFFSET(::IndexRpc::IndexReply, _impl_.timeid_),
        PROTOBUF_FIELD_OFFSET(::IndexRpc::IndexReply, _impl_.varid_),
        PROTOBUF_FIELD_OFFSET(::IndexRpc::IndexReply, _impl_.varname_),
        PROTOBUF_FIELD_OFFSET(::IndexRpc::IndexReply, _impl_.dirpath_),
        PROTOBUF_FIELD_OFFSET(::IndexRpc::IndexReply, _impl_.filepath_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::IndexRpc::IndexSend)},
        {9, -1, -1, sizeof(::IndexRpc::IndexReply)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::IndexRpc::_IndexSend_default_instance_._instance,
    &::IndexRpc::_IndexReply_default_instance_._instance,
};
const char descriptor_table_protodef_index_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\013index.proto\022\010IndexRpc\" \n\tIndexSend\022\023\n\013"
    "contentDesc\030\001 \001(\t\"p\n\nIndexReply\022\017\n\007space"
    "ID\030\001 \001(\005\022\016\n\006TimeID\030\002 \001(\005\022\r\n\005varID\030\003 \003(\005\022"
    "\017\n\007varName\030\004 \003(\t\022\017\n\007dirPath\030\005 \003(\t\022\020\n\010fil"
    "ePath\030\006 \003(\t2E\n\014indexService\0225\n\010GetIndex\022"
    "\023.IndexRpc.IndexSend\032\024.IndexRpc.IndexRep"
    "lyb\006proto3"
};
static ::absl::once_flag descriptor_table_index_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_index_2eproto = {
    false,
    false,
    250,
    descriptor_table_protodef_index_2eproto,
    "index.proto",
    &descriptor_table_index_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_index_2eproto::offsets,
    file_level_enum_descriptors_index_2eproto,
    file_level_service_descriptors_index_2eproto,
};
namespace IndexRpc {
// ===================================================================

class IndexSend::_Internal {
 public:
};

IndexSend::IndexSend(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IndexRpc.IndexSend)
}
inline PROTOBUF_NDEBUG_INLINE IndexSend::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::IndexRpc::IndexSend& from_msg)
      : contentdesc_(arena, from.contentdesc_),
        _cached_size_{0} {}

IndexSend::IndexSend(
    ::google::protobuf::Arena* arena,
    const IndexSend& from)
    : ::google::protobuf::Message(arena) {
  IndexSend* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:IndexRpc.IndexSend)
}
inline PROTOBUF_NDEBUG_INLINE IndexSend::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : contentdesc_(arena),
        _cached_size_{0} {}

inline void IndexSend::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
IndexSend::~IndexSend() {
  // @@protoc_insertion_point(destructor:IndexRpc.IndexSend)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void IndexSend::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.contentdesc_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
IndexSend::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(IndexSend, _impl_._cached_size_),
              false,
          },
          &IndexSend::MergeImpl,
          &IndexSend::kDescriptorMethods,
          &descriptor_table_index_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 38, 2> IndexSend::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_IndexSend_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::IndexRpc::IndexSend>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string contentDesc = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(IndexSend, _impl_.contentdesc_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string contentDesc = 1;
    {PROTOBUF_FIELD_OFFSET(IndexSend, _impl_.contentdesc_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\22\13\0\0\0\0\0\0"
    "IndexRpc.IndexSend"
    "contentDesc"
  }},
};

PROTOBUF_NOINLINE void IndexSend::Clear() {
// @@protoc_insertion_point(message_clear_start:IndexRpc.IndexSend)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.contentdesc_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* IndexSend::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IndexRpc.IndexSend)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string contentDesc = 1;
  if (!this->_internal_contentdesc().empty()) {
    const std::string& _s = this->_internal_contentdesc();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "IndexRpc.IndexSend.contentDesc");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IndexRpc.IndexSend)
  return target;
}

::size_t IndexSend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IndexRpc.IndexSend)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string contentDesc = 1;
  if (!this->_internal_contentdesc().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_contentdesc());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void IndexSend::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<IndexSend*>(&to_msg);
  auto& from = static_cast<const IndexSend&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IndexRpc.IndexSend)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_contentdesc().empty()) {
    _this->_internal_set_contentdesc(from._internal_contentdesc());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IndexSend::CopyFrom(const IndexSend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IndexRpc.IndexSend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void IndexSend::InternalSwap(IndexSend* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contentdesc_, &other->_impl_.contentdesc_, arena);
}

::google::protobuf::Metadata IndexSend::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class IndexReply::_Internal {
 public:
};

IndexReply::IndexReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IndexRpc.IndexReply)
}
inline PROTOBUF_NDEBUG_INLINE IndexReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::IndexRpc::IndexReply& from_msg)
      : varid_{visibility, arena, from.varid_},
        _varid_cached_byte_size_{0},
        varname_{visibility, arena, from.varname_},
        dirpath_{visibility, arena, from.dirpath_},
        filepath_{visibility, arena, from.filepath_},
        _cached_size_{0} {}

IndexReply::IndexReply(
    ::google::protobuf::Arena* arena,
    const IndexReply& from)
    : ::google::protobuf::Message(arena) {
  IndexReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, spaceid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, spaceid_),
           offsetof(Impl_, timeid_) -
               offsetof(Impl_, spaceid_) +
               sizeof(Impl_::timeid_));

  // @@protoc_insertion_point(copy_constructor:IndexRpc.IndexReply)
}
inline PROTOBUF_NDEBUG_INLINE IndexReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : varid_{visibility, arena},
        _varid_cached_byte_size_{0},
        varname_{visibility, arena},
        dirpath_{visibility, arena},
        filepath_{visibility, arena},
        _cached_size_{0} {}

inline void IndexReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, spaceid_),
           0,
           offsetof(Impl_, timeid_) -
               offsetof(Impl_, spaceid_) +
               sizeof(Impl_::timeid_));
}
IndexReply::~IndexReply() {
  // @@protoc_insertion_point(destructor:IndexRpc.IndexReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void IndexReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
IndexReply::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(IndexReply, _impl_._cached_size_),
              false,
          },
          &IndexReply::MergeImpl,
          &IndexReply::kDescriptorMethods,
          &descriptor_table_index_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 50, 2> IndexReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_IndexReply_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::IndexRpc::IndexReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 spaceID = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(IndexReply, _impl_.spaceid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(IndexReply, _impl_.spaceid_)}},
    // int32 TimeID = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(IndexReply, _impl_.timeid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(IndexReply, _impl_.timeid_)}},
    // repeated int32 varID = 3;
    {::_pbi::TcParser::FastV32P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(IndexReply, _impl_.varid_)}},
    // repeated string varName = 4;
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(IndexReply, _impl_.varname_)}},
    // repeated string dirPath = 5;
    {::_pbi::TcParser::FastUR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(IndexReply, _impl_.dirpath_)}},
    // repeated string filePath = 6;
    {::_pbi::TcParser::FastUR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(IndexReply, _impl_.filepath_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 spaceID = 1;
    {PROTOBUF_FIELD_OFFSET(IndexReply, _impl_.spaceid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 TimeID = 2;
    {PROTOBUF_FIELD_OFFSET(IndexReply, _impl_.timeid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated int32 varID = 3;
    {PROTOBUF_FIELD_OFFSET(IndexReply, _impl_.varid_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // repeated string varName = 4;
    {PROTOBUF_FIELD_OFFSET(IndexReply, _impl_.varname_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string dirPath = 5;
    {PROTOBUF_FIELD_OFFSET(IndexReply, _impl_.dirpath_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string filePath = 6;
    {PROTOBUF_FIELD_OFFSET(IndexReply, _impl_.filepath_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\23\0\0\0\7\7\10\0"
    "IndexRpc.IndexReply"
    "varName"
    "dirPath"
    "filePath"
  }},
};

PROTOBUF_NOINLINE void IndexReply::Clear() {
// @@protoc_insertion_point(message_clear_start:IndexRpc.IndexReply)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.varid_.Clear();
  _impl_.varname_.Clear();
  _impl_.dirpath_.Clear();
  _impl_.filepath_.Clear();
  ::memset(&_impl_.spaceid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.timeid_) -
      reinterpret_cast<char*>(&_impl_.spaceid_)) + sizeof(_impl_.timeid_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* IndexReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IndexRpc.IndexReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 spaceID = 1;
  if (this->_internal_spaceid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_spaceid(), target);
  }

  // int32 TimeID = 2;
  if (this->_internal_timeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_timeid(), target);
  }

  // repeated int32 varID = 3;
  {
    int byte_size = _impl_._varid_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          3, _internal_varid(), byte_size, target);
    }
  }

  // repeated string varName = 4;
  for (int i = 0, n = this->_internal_varname_size(); i < n; ++i) {
    const auto& s = this->_internal_varname().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "IndexRpc.IndexReply.varName");
    target = stream->WriteString(4, s, target);
  }

  // repeated string dirPath = 5;
  for (int i = 0, n = this->_internal_dirpath_size(); i < n; ++i) {
    const auto& s = this->_internal_dirpath().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "IndexRpc.IndexReply.dirPath");
    target = stream->WriteString(5, s, target);
  }

  // repeated string filePath = 6;
  for (int i = 0, n = this->_internal_filepath_size(); i < n; ++i) {
    const auto& s = this->_internal_filepath().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "IndexRpc.IndexReply.filePath");
    target = stream->WriteString(6, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IndexRpc.IndexReply)
  return target;
}

::size_t IndexReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IndexRpc.IndexReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated int32 varID = 3;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_varid())
    ;
    _impl_._varid_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated string varName = 4;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_varname().size());
  for (int i = 0, n = _internal_varname().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_varname().Get(i));
  }
  // repeated string dirPath = 5;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_dirpath().size());
  for (int i = 0, n = _internal_dirpath().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_dirpath().Get(i));
  }
  // repeated string filePath = 6;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_filepath().size());
  for (int i = 0, n = _internal_filepath().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_filepath().Get(i));
  }
  // int32 spaceID = 1;
  if (this->_internal_spaceid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_spaceid());
  }

  // int32 TimeID = 2;
  if (this->_internal_timeid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_timeid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void IndexReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<IndexReply*>(&to_msg);
  auto& from = static_cast<const IndexReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IndexRpc.IndexReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_varid()->MergeFrom(from._internal_varid());
  _this->_internal_mutable_varname()->MergeFrom(from._internal_varname());
  _this->_internal_mutable_dirpath()->MergeFrom(from._internal_dirpath());
  _this->_internal_mutable_filepath()->MergeFrom(from._internal_filepath());
  if (from._internal_spaceid() != 0) {
    _this->_impl_.spaceid_ = from._impl_.spaceid_;
  }
  if (from._internal_timeid() != 0) {
    _this->_impl_.timeid_ = from._impl_.timeid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IndexReply::CopyFrom(const IndexReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IndexRpc.IndexReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void IndexReply::InternalSwap(IndexReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.varid_.InternalSwap(&other->_impl_.varid_);
  _impl_.varname_.InternalSwap(&other->_impl_.varname_);
  _impl_.dirpath_.InternalSwap(&other->_impl_.dirpath_);
  _impl_.filepath_.InternalSwap(&other->_impl_.filepath_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IndexReply, _impl_.timeid_)
      + sizeof(IndexReply::_impl_.timeid_)
      - PROTOBUF_FIELD_OFFSET(IndexReply, _impl_.spaceid_)>(
          reinterpret_cast<char*>(&_impl_.spaceid_),
          reinterpret_cast<char*>(&other->_impl_.spaceid_));
}

::google::protobuf::Metadata IndexReply::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace IndexRpc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_index_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
